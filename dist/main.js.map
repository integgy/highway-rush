{"version":3,"file":"main.js","mappings":"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","sources":["webpack://highway-rush/./game-nodes/fuel.js","webpack://highway-rush/./game-nodes/game-functions.js","webpack://highway-rush/./game-nodes/incoming-traffic.js","webpack://highway-rush/./game-nodes/player-car.js","webpack://highway-rush/webpack/bootstrap","webpack://highway-rush/webpack/runtime/compat get default export","webpack://highway-rush/webpack/runtime/define property getters","webpack://highway-rush/webpack/runtime/hasOwnProperty shorthand","webpack://highway-rush/./src/index.js"],"sourcesContent":["const { randomXPos } = require(\"./game-functions\")\n\n\nclass FuelTank {\n    constructor(img){\n        this.l = 40\n        this.h = 50\n        this.x = randomXPos(this.l)\n        this.y = -200\n        this.color = \"black\"\n        this.image = img\n    }\n\n    draw(cxt) {\n        // cxt.fillStyle = this.color\n        // cxt.fillRect(this.x, this.y, this.l, this.h)\n        cxt.drawImage(\n            this.image,\n            this.x-4,\n            this.y,\n            50,\n            50\n        )\n    }\n\n    move(vel){\n        this.y += vel\n    }\n    \n    end(height){        \n        if (this.y > height) return true\n        \n    }\n\n    respawn(){\n        this.x = randomXPos(this.l)\n        this.y = -50\n    }\n\n    passedGate() {\n        if (this.y === 225){\n         return true\n        } else {\n         return false\n        }\n     }\n\n    collision(obj){\n        const RightSide = this.x + this.l >= obj.x\n        const LeftSide = this.x <= obj.x + obj.l\n        const FrontSide = this.y + (this.h + 25) >= obj.y\n        const BackSide = this.y <= obj.y + (obj.h + 25)\n        \n        if (RightSide && LeftSide && FrontSide && BackSide) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n\n\n}\n\nmodule.exports = FuelTank","\r\nconst canWidth = 1024\r\nconst canHeight = 700\r\nconst middle = canWidth/2\r\n\r\n\r\n\r\nfunction randomInt(max)  {\r\n    return Math.floor(Math.random() * max)\r\n}\r\n\r\nfunction randomXPos(item){\r\n    const xArr = [\r\n        middle - (item/2) - 235,\r\n        middle - (item/2) - 120, \r\n        middle - (item/2), \r\n        middle - (item/2) + 120, \r\n        middle - (item/2) + 235\r\n    ]\r\n    return xArr[randomInt(xArr.length)]\r\n}\r\n\r\nfunction uniqueInt(max, previous) {\r\n    let randomNum;\r\n    \r\n    do {\r\n        randomNum = Math.floor(Math.random() * max);\r\n    } while (randomNum === previous);\r\n\r\n    return randomNum;\r\n}\r\n\r\n\r\nfunction gameDetails(cxt, score, lives, fuel){\r\n    cxt.font = \"48px Bebas Neue\";\r\n    cxt.fillStyle = \"white\"\r\n    cxt.fillText(`Score: ${score}`, 10, 50);\r\n}\r\n\r\nfunction gameOver(cxt, score){\r\n    cxt.font = \"48px Bebas Neue\";\r\n    cxt.fillStyle = \"white\"\r\n    cxt.fillText(\"Game Over\", middle - 120, 300);\r\n\r\n    cxt.font = \"48px Bebas Neue\";\r\n    cxt.fillStyle = \"white\"\r\n    cxt.fillText(`Your Score: ${score}`, middle - 140, 350);\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    canHeight,\r\n    canWidth,\r\n    middle,\r\n    randomXPos,\r\n    gameDetails,\r\n    randomInt,\r\n    gameOver,\r\n    uniqueInt\r\n}","const { randomXPos } = require(\"./game-functions\")\r\nconst { canHeight } = require(\"./game-functions\")\r\n\r\nclass NpcCar {\r\n    constructor(img){\r\n        this.l = 50\r\n        this.h = 90\r\n        this.x = randomXPos(this.l)\r\n        this.y = -300\r\n        this.color = \"black\"\r\n        this.image = img\r\n    }\r\n\r\n    draw(cxt) {\r\n        // cxt.fillStyle = this.color\r\n        // cxt.fillRect(this.x, this.y, this.l, this.h)\r\n        cxt.drawImage(\r\n            this.image,\r\n            this.x-44,\r\n            this.y-17,\r\n            150,\r\n            125\r\n\r\n        )\r\n    }\r\n\r\n    move(vel){\r\n        this.y += vel\r\n    }\r\n\r\n    end(height){        \r\n        if (this.y > height) return true\r\n        \r\n    }\r\n\r\n    respawn(){\r\n        this.x = randomXPos(this.l)\r\n        this.y = -300\r\n    }\r\n\r\n    passedGate(vel) {\r\n        const y = Math.floor(this.y/vel)\r\n        const gate = Math.floor(100/vel)\r\n        if (y === gate){\r\n         return true\r\n        } else {\r\n         return false\r\n        }\r\n     }\r\n\r\n    collision(obj){\r\n        const RightSide = this.x + this.l >= obj.x\r\n        const LeftSide = this.x <= obj.x + obj.l\r\n        const FrontSide = this.y + (this.h + 15) >= obj.y\r\n        const BackSide = this.y <= obj.y + (obj.h + 15)\r\n        \r\n        if (RightSide && LeftSide && FrontSide && BackSide) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nmodule.exports = NpcCar\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function spawnPattern(car){\r\n//     function randomInt()  {return Math.floor(Math.random() * 9)}\r\n//     const laneOne = [middle - 200, -100]\r\n//     const laneTwo = [middle - 100, -100]\r\n//     const laneThree = [middle, -100]\r\n//     const laneFour = [middle + 100, -100]\r\n//     const laneFive = [middle + 200, -100]\r\n//     const rowOne = -100\r\n//     const rowTwo = -200\r\n\r\n//     const pattern = {\r\n//         0: [laneThree, laneFour, laneFive],\r\n//         1: [laneFour, laneFive, laneOne],\r\n//         2: [laneThree, laneFour, laneTwo],\r\n//         3: [laneThree, laneFour, laneFive],\r\n//         4: [laneThree, laneFour, laneOne],\r\n//         5: [laneOne, laneThree, laneFour],\r\n//         6: [laneOne, laneFour, laneFive],\r\n//         7: [laneOne, laneTwo, laneThree],\r\n//         8: [laneOne, laneTwo, laneFour],\r\n//         9: [laneOne, laneTwo, laneFive]\r\n//     }\r\n\r\n\r\n//     let randIdx = randomInt()\r\n//     console.log(randIdx)\r\n//     for (let i = 0; i < 3; i++){\r\n//         let x = pattern[randIdx][i][0]\r\n//         let y = pattern[randIdx][i][1]\r\n//         car[i].x = x\r\n//         car[i].y = y\r\n//     }\r\n\r\n//     // return pattern[randIdx].length\r\n\r\n// }","class Player {\r\n    constructor(x, y, img){\r\n        this.color = \"blue\"\r\n        this.l = 50\r\n        this.h = 90\r\n        this.x = x - (this.l/2)\r\n        this.y = y\r\n        this.image = img\r\n\r\n    }\r\n\r\n    draw(cxt) {\r\n        // cxt.fillStyle = this.color\r\n        // cxt.fillRect(this.x, this.y, this.l, this.h)\r\n        cxt.drawImage(\r\n            this.image,\r\n            this.x-49,\r\n            this.y-10,\r\n            150,\r\n            125\r\n        )\r\n    }\r\n\r\n    move(m) {\r\n\r\n    }\r\n\r\n    playerCollision(obj){\r\n        const playerRightSide = this.x + this.l >= obj.x\r\n        const playerLeftSide = this.x <= obj.x + obj.l\r\n        const playerFrontSide = this.y + this.h >= obj.y\r\n        const playerBackSide = this.y <= obj.y + obj.h\r\n\r\n        if (playerRightSide && playerLeftSide && playerFrontSide && playerBackSide) {\r\n            return true\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = Player","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","import Player from \"../game-nodes/player-car\"\r\nimport NpcCar from \"../game-nodes/incoming-traffic.js\"\r\nimport { randomInt, gameOver, gameDetails } from \"../game-nodes/game-functions\"\r\nimport { canHeight, canWidth, middle } from \"../game-nodes/game-functions\"\r\nimport FuelTank from \"../game-nodes/fuel.js\"\r\n\r\n\r\nconst startButton = document.querySelector('#start')\r\nconst canvas = document.querySelector(\"canvas\")\r\nconst playerFuel = document.querySelector(\".fuel-meter\")\r\nconst playerLives = document.querySelector(\".game-lives\")\r\nconst c = canvas.getContext(\"2d\")\r\n\r\n\r\ncanvas.width = canWidth\r\ncanvas.height = canHeight\r\n\r\n\r\nfunction background(start, cxt){\r\n    if (start) {\r\n        bg.src = \"./game_imgs/start-screen.png\"\r\n    } else {\r\n        bg.src = \"./game_imgs/highway_img.png\"\r\n    }\r\n    cxt.clearRect(0, 0, canWidth, canHeight);\r\n    cxt.drawImage(bg, 0, 0, canWidth, canHeight);\r\n}\r\n\r\n// Car imgs\r\nconst truck = new Image()\r\ntruck.src = \"./game_imgs/Mini_truck.png\"\r\n\r\nconst taxi = new Image()\r\ntaxi.src = \"./game_imgs/taxi.png\"\r\n\r\nconst semiTruck = new Image()\r\nsemiTruck.src = \"./game_imgs/truck.png\"\r\n\r\nconst police = new Image()\r\npolice.src = \"./game_imgs/Police.png\"\r\n\r\nconst redCar = new Image()\r\nredCar.src = \"./game_imgs/Audi.png\"\r\n\r\nconst blackCar = new Image()\r\nblackCar.src = \"./game_imgs/Black_viper.png\"\r\n\r\n\r\n\r\nconst gasTank = new Image()\r\ngasTank.src = \"./game_imgs/gas_tank.png\"\r\n\r\nconst carImgs = [\r\n    blackCar,\r\n    redCar,\r\n    semiTruck,\r\n    truck,\r\n    police,\r\n    taxi,\r\n]\r\n\r\nfunction makeRandomCar(){\r\n    const randomImg = carImgs[randomInt(carImgs.length)]\r\n    return new NpcCar(randomImg)\r\n}\r\n\r\n\r\nconst carImg = new Image()\r\ncarImg.src = \"./game_imgs/Car.png\"\r\n\r\n\r\nconst levels = {\r\n    8: 1.5,\r\n    15: 2,\r\n    20: 2.5,\r\n    30: 3,\r\n    40: 3.5,\r\n    50: 4,\r\n    60: 4.5,\r\n    70: 5,\r\n    100: 5.5,\r\n    120: 6,\r\n    150: 7,\r\n    200: 7.5,\r\n    300: 8,\r\n    350: 9\r\n\r\n}\r\n\r\n   \r\n// Movement\r\nconst keys = {\r\n    left:{\r\n        pressed: false\r\n    },\r\n    right:{\r\n        pressed: false\r\n    }\r\n}\r\n\r\n\r\nfunction newGame(){\r\n\r\n    setInterval(() => {\r\n        if (paused) {\r\n            fuel -= .5\r\n            if (vel > 1) fuel -= .5\r\n            if (vel > 4) fuel -= 1\r\n            if (vel > 6) fuel -= 1\r\n        }\r\n    }, 1000);\r\n\r\n    carsInPlay = [makeRandomCar()]\r\n    fuelTanks = [];\r\n    score = 0;\r\n    lives = 5;\r\n    fuel = 100;\r\n    vel = 1;\r\n    paused = false;\r\n    running = true;\r\n    gatePasses = null;\r\n    animate()\r\n}\r\n\r\n\r\n\r\n// Player car and game details\r\nconst player = new Player(middle, canHeight - 125, carImg)\r\nlet carsInPlay;\r\nlet fuelTanks;\r\nlet score;\r\nlet lives;\r\nlet fuel;\r\nlet vel;\r\n\r\n\r\nlet bg = new Image()\r\nlet paused;\r\nlet running;\r\nlet firstStart = true;\r\nlet gatePasses;\r\n\r\n// render Map and game logic\r\nfunction animate() {\r\n    playerFuel.style.width = `${fuel}%`\r\n    playerLives.innerHTML = `Lives: ${lives}`\r\n    if (lives < 1 || fuel < 1) {\r\n        running = false\r\n        paused = false\r\n    }\r\n    \r\n    if (running) requestAnimationFrame(animate);\r\n    background(firstStart, c)\r\n    if (!running) {\r\n        gameOver(c, score);\r\n        startButton.innerHTML = \"restart\";\r\n        startButton.value = \"restart\"\r\n    } else if (!firstStart) {\r\n         gameDetails(c, score, lives, fuel);\r\n    }\r\n   \r\n\r\n    if (keys.left.pressed) {\r\n        if (player.x > middle - 290) player.x -= 5\r\n    }\r\n    if (keys.right.pressed) {\r\n        if (player.x < middle + 240)player.x += 5\r\n    }\r\n\r\n    player.draw(c);\r\n    for (let i = 0; i < carsInPlay.length; i++){\r\n        const car = carsInPlay[i];\r\n        car.draw(c);\r\n        if (paused) car.move(vel)\r\n        if (car.passedGate(vel)) {\r\n            gatePasses++;\r\n            if (carsInPlay.length < 8) {\r\n                if (carsInPlay.length > 6){\r\n                    if (gatePasses % 3 === 0) carsInPlay.push(makeRandomCar())\r\n                } else {\r\n                    carsInPlay.push(new NpcCar(carImgs[i]))\r\n                }\r\n            }\r\n\r\n            if (gatePasses % 3 === 0 || gatePasses === 1)   {\r\n                if (fuelTanks.length < 4) fuelTanks.push(new FuelTank(gasTank));\r\n            }\r\n        }\r\n\r\n        \r\n\r\n        let overLapCheck = carsInPlay.filter(ele => ele !== car)\r\n        if (carsInPlay.length > 2){\r\n            for (let i = 0; i < overLapCheck.length; i++) {\r\n                if (car.collision(overLapCheck[i])) {\r\n                    car.respawn();\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        \r\n    \r\n        if (player.playerCollision(car)) {\r\n            carsInPlay.splice(i, 1);\r\n            lives -= 1;\r\n        }\r\n\r\n        if (car.end(canHeight)) {\r\n            score += 1;\r\n            car.respawn();\r\n            if (levels[score]) vel = levels[score];\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n    fuelTanks.forEach(tank => {\r\n        let tankIdx = fuelTanks.indexOf(tank);\r\n        tank.draw(c);\r\n        if (paused) tank.move(vel);\r\n\r\n        for (let i = 0; i < carsInPlay.length; i++){\r\n            const car = carsInPlay[i]\r\n            if (tank.collision(car)) {\r\n                tank.respawn()\r\n                break\r\n            }\r\n        };\r\n\r\n        if (player.playerCollision(tank)) {\r\n            fuelTanks.splice(tankIdx, 1)\r\n            if (fuel < 95) fuel += 5;\r\n        }\r\n\r\n        if (tank.end(canHeight)) {\r\n            tank.respawn();\r\n        }\r\n\r\n    })\r\n\r\n\r\n}\r\n\r\nnewGame()\r\n\r\n\r\nwindow.addEventListener(\"keydown\", e => {\r\n    switch (e.key) {\r\n        case \"ArrowLeft\":\r\n            keys.left.pressed = true\r\n            break\r\n        case \"ArrowRight\":\r\n            keys.right.pressed = true\r\n            break\r\n    }\r\n})\r\n\r\nwindow.addEventListener(\"keyup\", e => {\r\n    switch (e.key) {\r\n        case \"ArrowLeft\":\r\n            keys.left.pressed = false\r\n            break\r\n        case \"ArrowRight\":\r\n            keys.right.pressed = false\r\n            break\r\n    }\r\n})\r\n\r\n\r\n\r\nstartButton.addEventListener(\"click\", e =>{\r\n    if (startButton.value === \"restart\") {\r\n        startButton.innerHTML = \"Pause\"\r\n        startButton.value = \"pause\"\r\n        newGame()\r\n        paused = true\r\n    } else {\r\n        paused = !paused\r\n        firstStart = false\r\n        if (!paused){\r\n            startButton.innerHTML = \"Continue\"\r\n            startButton.value = \"continue\"\r\n        } else {\r\n            startButton.innerHTML = \"Pause\"\r\n            startButton.value = \"pause\"\r\n        }\r\n\r\n    }\r\n    \r\n})\r\n\r\n"],"names":["randomXPos","require","module","exports","constructor","img","this","l","h","x","y","color","image","draw","cxt","drawImage","move","vel","end","height","respawn","passedGate","collision","obj","RightSide","LeftSide","FrontSide","BackSide","middle","canWidth","randomInt","max","Math","floor","random","canHeight","item","xArr","length","gameDetails","score","lives","fuel","font","fillStyle","fillText","gameOver","uniqueInt","previous","randomNum","m","playerCollision","playerRightSide","playerLeftSide","playerFrontSide","playerBackSide","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","startButton","document","querySelector","canvas","playerFuel","playerLives","c","getContext","width","truck","Image","src","taxi","semiTruck","police","redCar","blackCar","gasTank","carImgs","makeRandomCar","randomImg","NpcCar","carImg","levels","keys","left","pressed","right","newGame","setInterval","paused","carsInPlay","fuelTanks","running","gatePasses","animate","player","Player","bg","firstStart","start","style","innerHTML","requestAnimationFrame","clearRect","value","i","car","push","FuelTank","overLapCheck","filter","ele","splice","forEach","tank","tankIdx","indexOf","window","addEventListener","e"],"sourceRoot":""}